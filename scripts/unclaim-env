#!/bin/bash -e

unclaimed_dir() {
  local depth=$(echo $1 | awk -F/ '{ print NF }')
  local claimed_dir=$(echo $1 | cut -d/ -f$((${depth} - 1)))

  if [ "${claimed_dir}" = "claimed" ]; then
    echo $1 | sed -e 's/claimed/unclaimed/'
  else
    echo $1
  fi
}

unclaim_env() {
  local env_name=$1

  local env_file=$(find . -name ${env_name})

  if [ -z ${env_file} ]; then
    echo "${env_name} is not a valid environment name."
    exit 1
  fi

  env_file=$(echo ${env_file} | cut -c3-)

  set +e
  echo ${env_file} | grep -wq claimed

  if [ $? -ne 0 ]; then
    echo "${env_name} is not claimed (${env_file})."
    exit 0
  fi
  set -e

  echo "${env_name} is claimed (${env_file})."

  local new_dir=$(unclaimed_dir ${env_file})

  read -p "Press <enter> to move ${env_name} to ${new_dir}: "

  git mv ${env_file} ${new_dir}
  git ci -m"Manually unclaim ${env_name}"
  git push origin head
}

if [ $# -lt 1 ]; then
  echo "Usage: $0 env_name ..."
  exit 1
fi

git pull -r

while [ $# -gt 0 ]; do
  unclaim_env $1
  shift

  if [ $# -gt 0 ]; then
    echo
  fi
done
